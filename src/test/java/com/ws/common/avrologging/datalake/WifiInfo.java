package com.ws.common.avrologging.datalake;
/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
/** WIFI information. */
@org.apache.avro.specific.AvroGenerated
public class WifiInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"WifiInfo\",\"namespace\":\"com.ws.common.avrologging.datalake\",\"doc\":\"WIFI information.\",\"fields\":[{\"name\":\"bssid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"MAC address.\",\"default\":null},{\"name\":\"ssid\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"SSID name for the access point.\",\"default\":null},{\"name\":\"lvl\",\"type\":[\"null\",\"int\"],\"doc\":\"Signal Strength in dBm.\",\"default\":null},{\"name\":\"active\",\"type\":\"boolean\",\"doc\":\"If active, i.e. `true` if this is the router user is connected to.\",\"default\":false}]}");
    public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
    /** MAC address. */
    @Deprecated public java.lang.String bssid;
    /** SSID name for the access point. */
    @Deprecated public java.lang.String ssid;
    /** Signal Strength in dBm. */
    @Deprecated public java.lang.Integer lvl;
    /** If active, i.e. `true` if this is the router user is connected to. */
    @Deprecated public boolean active;

    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>. 
     */
    public WifiInfo() {}

    /**
     * All-args constructor.
     */
    public WifiInfo(java.lang.String bssid, java.lang.String ssid, java.lang.Integer lvl, java.lang.Boolean active) {
        this.bssid = bssid;
        this.ssid = ssid;
        this.lvl = lvl;
        this.active = active;
    }

    public org.apache.avro.Schema getSchema() { return SCHEMA$; }
    // Used by DatumWriter.  Applications should not call. 
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0: return bssid;
            case 1: return ssid;
            case 2: return lvl;
            case 3: return active;
            default: throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }
    // Used by DatumReader.  Applications should not call. 
    @SuppressWarnings(value="unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0: bssid = (java.lang.String)value$; break;
            case 1: ssid = (java.lang.String)value$; break;
            case 2: lvl = (java.lang.Integer)value$; break;
            case 3: active = (java.lang.Boolean)value$; break;
            default: throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'bssid' field.
     * MAC address.   */
    public java.lang.String getBssid() {
        return bssid;
    }

    /**
     * Sets the value of the 'bssid' field.
     * MAC address.   * @param value the value to set.
     */
    public void setBssid(java.lang.String value) {
        this.bssid = value;
    }

    /**
     * Gets the value of the 'ssid' field.
     * SSID name for the access point.   */
    public java.lang.String getSsid() {
        return ssid;
    }

    /**
     * Sets the value of the 'ssid' field.
     * SSID name for the access point.   * @param value the value to set.
     */
    public void setSsid(java.lang.String value) {
        this.ssid = value;
    }

    /**
     * Gets the value of the 'lvl' field.
     * Signal Strength in dBm.   */
    public java.lang.Integer getLvl() {
        return lvl;
    }

    /**
     * Sets the value of the 'lvl' field.
     * Signal Strength in dBm.   * @param value the value to set.
     */
    public void setLvl(java.lang.Integer value) {
        this.lvl = value;
    }

    /**
     * Gets the value of the 'active' field.
     * If active, i.e. `true` if this is the router user is connected to.   */
    public java.lang.Boolean getActive() {
        return active;
    }

    /**
     * Sets the value of the 'active' field.
     * If active, i.e. `true` if this is the router user is connected to.   * @param value the value to set.
     */
    public void setActive(java.lang.Boolean value) {
        this.active = value;
    }

    /** Creates a new WifiInfo RecordBuilder */
    public static com.ws.common.avrologging.datalake.WifiInfo.Builder newBuilder() {
        return new com.ws.common.avrologging.datalake.WifiInfo.Builder();
    }

    /** Creates a new WifiInfo RecordBuilder by copying an existing Builder */
    public static com.ws.common.avrologging.datalake.WifiInfo.Builder newBuilder(com.ws.common.avrologging.datalake.WifiInfo.Builder other) {
        return new com.ws.common.avrologging.datalake.WifiInfo.Builder(other);
    }

    /** Creates a new WifiInfo RecordBuilder by copying an existing WifiInfo instance */
    public static com.ws.common.avrologging.datalake.WifiInfo.Builder newBuilder(com.ws.common.avrologging.datalake.WifiInfo other) {
        return new com.ws.common.avrologging.datalake.WifiInfo.Builder(other);
    }

    /**
     * RecordBuilder for WifiInfo instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<WifiInfo>
            implements org.apache.avro.data.RecordBuilder<WifiInfo> {

        private java.lang.String bssid;
        private java.lang.String ssid;
        private java.lang.Integer lvl;
        private boolean active;

        /** Creates a new Builder */
        private Builder() {
            super(com.ws.common.avrologging.datalake.WifiInfo.SCHEMA$);
        }

        /** Creates a Builder by copying an existing Builder */
        private Builder(com.ws.common.avrologging.datalake.WifiInfo.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.bssid)) {
                this.bssid = data().deepCopy(fields()[0].schema(), other.bssid);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.ssid)) {
                this.ssid = data().deepCopy(fields()[1].schema(), other.ssid);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.lvl)) {
                this.lvl = data().deepCopy(fields()[2].schema(), other.lvl);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.active)) {
                this.active = data().deepCopy(fields()[3].schema(), other.active);
                fieldSetFlags()[3] = true;
            }
        }

        /** Creates a Builder by copying an existing WifiInfo instance */
        private Builder(com.ws.common.avrologging.datalake.WifiInfo other) {
            super(com.ws.common.avrologging.datalake.WifiInfo.SCHEMA$);
            if (isValidValue(fields()[0], other.bssid)) {
                this.bssid = data().deepCopy(fields()[0].schema(), other.bssid);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.ssid)) {
                this.ssid = data().deepCopy(fields()[1].schema(), other.ssid);
                fieldSetFlags()[1] = true;
            }
            if (isValidValue(fields()[2], other.lvl)) {
                this.lvl = data().deepCopy(fields()[2].schema(), other.lvl);
                fieldSetFlags()[2] = true;
            }
            if (isValidValue(fields()[3], other.active)) {
                this.active = data().deepCopy(fields()[3].schema(), other.active);
                fieldSetFlags()[3] = true;
            }
        }

        /** Gets the value of the 'bssid' field */
        public java.lang.String getBssid() {
            return bssid;
        }

        /** Sets the value of the 'bssid' field */
        public com.ws.common.avrologging.datalake.WifiInfo.Builder setBssid(java.lang.String value) {
            validate(fields()[0], value);
            this.bssid = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /** Checks whether the 'bssid' field has been set */
        public boolean hasBssid() {
            return fieldSetFlags()[0];
        }

        /** Clears the value of the 'bssid' field */
        public com.ws.common.avrologging.datalake.WifiInfo.Builder clearBssid() {
            bssid = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        /** Gets the value of the 'ssid' field */
        public java.lang.String getSsid() {
            return ssid;
        }

        /** Sets the value of the 'ssid' field */
        public com.ws.common.avrologging.datalake.WifiInfo.Builder setSsid(java.lang.String value) {
            validate(fields()[1], value);
            this.ssid = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /** Checks whether the 'ssid' field has been set */
        public boolean hasSsid() {
            return fieldSetFlags()[1];
        }

        /** Clears the value of the 'ssid' field */
        public com.ws.common.avrologging.datalake.WifiInfo.Builder clearSsid() {
            ssid = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /** Gets the value of the 'lvl' field */
        public java.lang.Integer getLvl() {
            return lvl;
        }

        /** Sets the value of the 'lvl' field */
        public com.ws.common.avrologging.datalake.WifiInfo.Builder setLvl(java.lang.Integer value) {
            validate(fields()[2], value);
            this.lvl = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /** Checks whether the 'lvl' field has been set */
        public boolean hasLvl() {
            return fieldSetFlags()[2];
        }

        /** Clears the value of the 'lvl' field */
        public com.ws.common.avrologging.datalake.WifiInfo.Builder clearLvl() {
            lvl = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /** Gets the value of the 'active' field */
        public java.lang.Boolean getActive() {
            return active;
        }

        /** Sets the value of the 'active' field */
        public com.ws.common.avrologging.datalake.WifiInfo.Builder setActive(boolean value) {
            validate(fields()[3], value);
            this.active = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /** Checks whether the 'active' field has been set */
        public boolean hasActive() {
            return fieldSetFlags()[3];
        }

        /** Clears the value of the 'active' field */
        public com.ws.common.avrologging.datalake.WifiInfo.Builder clearActive() {
            fieldSetFlags()[3] = false;
            return this;
        }

        @Override
        public WifiInfo build() {
            try {
                WifiInfo record = new WifiInfo();
                record.bssid = fieldSetFlags()[0] ? this.bssid : (java.lang.String) defaultValue(fields()[0]);
                record.ssid = fieldSetFlags()[1] ? this.ssid : (java.lang.String) defaultValue(fields()[1]);
                record.lvl = fieldSetFlags()[2] ? this.lvl : (java.lang.Integer) defaultValue(fields()[2]);
                record.active = fieldSetFlags()[3] ? this.active : (java.lang.Boolean) defaultValue(fields()[3]);
                return record;
            } catch (Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }
}
